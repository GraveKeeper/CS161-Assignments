Lab 5 
Sean Harrington

1. What is the output of the following C++ code?
int count = 10;
double sum = 0;
while(count > 8)
{
sum = sum + pow(count, 2.0);
count--;
}
cout << sum << endl;

181

2. Suppose that the input is 25 36 18 16 -1. What is the output of the following code?
int num;
int sum;
cin >> sum;
num = sum;
while (num != -1)
{
cin >> num;
sum = sum + num;
}
cout << "Sum = " << sum << endl;

sum = 94

3. Correct the following code so that it reads and finds the sum of 20 numbers:
int count = 0;
int sum = 0;
cin >> num;
while(count <= 20);
{
sum += num
cin >> num;
count++;
}


4. What is the output of the following program segment?
int count = 5;
while(--count > 0)
cout << count << " ";
cout << endl;

4 3 2 1

5. What is the output of the following program segment?
int num = 0;
int count;
int y = 0;
for (count = 1; count <= 5; ++count)
{
num = 3 * (count - 1) + (y - count);
cout << num << " ";
}
cout << count << " " << endl;

-1 1 3 5 7 6

6. Write a for statement to add all the multiples of 3 between 1 and 100.
for (int i = 3;i <= 100;i+=3)
cout << i;
7. What is the output of the following C++ program segment? Assume all variables are properly
declared.
for (j = 0; j < 8; j++)
{
cout << j * 25 << " - ";
if (j != 7)
cout << (j + 1) * 25 - 1 << endl;
else
cout << (j + 1) * 25 << endl;
}

0 - 24
25 - 49
50 - 74
75 - 99
100 - 124
125 - 149
150 - 174
175 - 200

8. How many times will each of the following loops execute? What is the output in each case?
a. x = 5; y = 50;
do
x = x + 10;
while (x < y);
cout << x << " " << y << endl;
x = 5; y = 80;
do
x = x * 2;
while (x < y);
cout << x << " " << y << endl;


both run 2 times and output: 
55 50
80 80

b.x = 5; y = 20;
do
x = x + 2;
while (x >= y);
cout << x << " " << y << endl;

one time 7 20

c.x = 5; y = 35;
while (x < y)
x = x + 10;
cout << x << " " << y << endl

one time 35 35

9. Given the following program segment:
int limit = 4;
int first = 5;
int j;
for(j = 1; j <= limit; j++)
{
cout << first * j << endl;
first = first + (j - 1);
}
cout << endl;
write a while loop and a do...while loop that have the same output.

while(j <= limit)
{
cout << first * j << endl;
first = first + (j - 1);
j++;
}

j=0
do
{
cout << first * j << endl;
first = first + (j - 1);
j++
} while(j <= limit)

10. To learn how nested for loops work, do a walk-through of the following program segments
and determine, in each case, the exact output.
a.int i, j;
for (i = 1; i <= 5; i++)
{
for (j = (i + 1); j <= 5; j++)
cout << setw(5) << j;
cout << endl;
}

    2    3    4    5
    3    4    5
    4    5
    5

b.int i, j;
for (i = 1; i <= 5; i++)
{
for (j = 1; j <= i; j++)
cout << setw(3) << j;
cout << endl;
}
  1
  1  2
  1  2  3
  1  2  3  4
  1  2  3  4  5


c.const int M = 10;
const int N = 10;
int i, j;
for (i = 1; i <= M; i++)
{
for (j = 1; j <= N; j++)
cout << setw(3) << M * (i - 1) + j;
cout << endl;
}

  1  2  3  4  5  6  7  8  9 10
 11 12 13 14 15 16 17 18 19 20
 21 22 23 24 25 26 27 28 29 30
 31 32 33 34 35 36 37 38 39 40
 41 42 43 44 45 46 47 48 49 50
 51 52 53 54 55 56 57 58 59 60
 61 62 63 64 65 66 67 68 69 70
 71 72 73 74 75 76 77 78 79 80
 81 82 83 84 85 86 87 88 89 90
 91 92 93 94 95 96 97 98 99100

d.int i, j;
for (i = 1; i <= 9; i++)
{
for (j = 1; j <= (9 - i); j++)
cout << " ";
for (j = 1; j <= i; j++)
cout << setw(1) << j;
for (j = (i - 1); j >= 1; j--)
cout << setw(1) << j;
cout << endl;
}
        1
       121
      12321
     1234321
    123454321
   12345654321
  1234567654321
 123456787654321
12345678987654321